/* 19:28 2015-04-02 Thursday */
#include <stdio.h>
#include <stdlib.h>

#define MAX 10

typedef int DATATYPE;
typedef struct
{
   DATATYPE s[MAX]; 
   int n;
}SeqList;

SeqList * Create_SeqList();
int Insert_SeqList(SeqList *L,int data);
int Printf_SeqList(SeqList *L);
int Delete_SeqList(SeqList *L,int data);
int Modifi_SeqList(SeqList *L,int n,int data);
int IsEmpty_SeqList(SeqList *L);
int IsFull_SeqList(SeqList *L);

int main()
{
    DATATYPE s[]={1,45,3,2,5,1,9};
    int i;
    printf("Insert_SeqList......\n");
    Insert_SeqList()

    
    return 0;
}

SeqList * create_seqlist()
{
    SeqList * L;
    L = (SeqList *)malloc(sizeof(SeqList));
    L->n = 0;
    return L;
}

int IsEmpty_SeqList(SeqList *L)
{
    if (L->n != 0)
        return 0;

    printf("Is Empty SeqList\n");
    return 1;
}

int IsFull_SeqList(SeqList *L)
{
    if (L->n != MAX)
        return 0;
    printf("Is Full SeqList\n");
    return 1;
}

int Insert_SeqList(SeqList *L,int data)
{
    if (IsFull_SeqList(L))    
    {
        return -1;
    }

    L->data[L->n] = data;
    L->n++;
    return 0;
}
int Printf_SeqList(SeqList *L)
{
    if(IsEmpty_SeqList(L))
    {
        return -1;
    }
    int i;

    for (i = 0; i < L->n; i++)
    {
        printf("%d  ",L[i]);
    }
    return 0;
}

int Delete_SeqList(SeqList *L,int data)
{
    if (IsEmpty_SeqList(L))
    {
        return -1;
    }

    int i,j;

    for (i = 0; i < L->n; i++)
    {
        if (L)
    }
}






int Modifi_SeqList(SeqList *L,int n,int data);
